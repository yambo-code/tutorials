Index: src/qp/XCo_driver.F
===================================================================
--- src/qp/XCo_driver.F	(revision 1145)
+++ src/qp/XCo_driver.F	(working copy)
@@ -21,9 +21,10 @@
 !
 subroutine XCo_driver(E,k,Xk,q)
  !
+ use pars,          ONLY: SP
  use drivers,       ONLY:l_acfdt,l_sc_run,l_real_time
  use pars,          ONLY:schlen
- use com,           ONLY:msg
+ use com,           ONLY:msg,of_open_close
  use units,         ONLY:HA2EV
  use electrons,     ONLY:levels,n_sp_pol,spin
  use stderr,        ONLY:intc,real2ch
@@ -53,6 +54,8 @@
  !
  integer           :: ID,io_err
  integer, external :: io_HF_and_locXC
+ real(SP)          :: output(2)
+ character(schlen) :: of_name
  !
  ! Section
  !
@@ -166,6 +169,18 @@
      Vxc_kind='LDA'
 #endif
      !
+     if(n_sp_pol==2) then
+       of_name='HFup'
+       call of_open_close(of_name,'ot')
+       of_name='HFdw'
+       call of_open_close(of_name,'ot')
+       call msg('o HFup HFdw','#','HF corrections to be plotted',INDENT=0)    
+     else
+       of_name='HF'
+       call of_open_close(of_name,'ot')
+       call msg('o HF','#','HF corrections to be plotted',INDENT=0)    
+     endif
+     !
      ik=QP_table(1,3)
      call msg('nr','XC '//trim(Vnlxc_kind)//' and '//trim(Vxc_kind)//' [eV] @ K ['//trim(intc(ik))//'] (iku):',k%pt(ik,:))
      !
@@ -198,10 +213,30 @@
        if (i_qp/=QP_n_states) call msg('r',trim(ch))
        if (i_qp==QP_n_states) call msg('rn',trim(ch))
        !
+       output(1)=E%E(ib,ik,spin(QP_table(i_qp,:)))*HA2EV
+       output(2)=output(1)-( QP_Vxc(i_qp)-QP_Vnl_xc(i_qp) )*HA2EV
+       if (n_sp_pol==2) then
+         if (spin(QP_table(i_qp,:))==1) &
+&           call msg('o HFup','',output,INDENT=-2,USE_TABS=.true.)
+         if (spin(QP_table(i_qp,:))==2) &
+&          call msg('o HFdw','',output,INDENT=-2,USE_TABS=.true.)
+       else
+         call msg('o HF','',output,INDENT=-2,USE_TABS=.true.)
+       endif
+       !
      enddo
      !
      ! I/O
      !
+     if(n_sp_pol==2) then
+       of_name='HFup'
+       call of_open_close(of_name)
+       of_name='HFdw'
+       call of_open_close(of_name)
+     else
+       call of_open_close(of_name)
+     endif
+     !
      if (io_err/=0) then
        call io_control(ACTION=OP_WR_CL,COM=REP,SEC=(/1,2/),ID=ID)
        io_err=io_HF_and_locXC(ID)
